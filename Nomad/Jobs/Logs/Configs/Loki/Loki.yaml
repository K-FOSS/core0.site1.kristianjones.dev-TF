# all, compactor, distributor, ingester, querier, query-frontend, table-manager.
target: {{ env "NOMAD_META_TARGET" }}

#
# TODO: Figure out SSO & M2M
#
auth_enabled: false

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#server_config
#
# Code Reference: https://github.com/weaveworks/common/blob/master/server/server.go
#
server:
  #
  # HTTP Server
  #
  http_listen_address: 0.0.0.0
  http_listen_port: 8080

  #
  # GRPC Server
  #
  grpc_listen_address: 0.0.0.0
  grpc_listen_port: 8085

  #
  # Logs
  #
  # Output log messages in the given format. Valid formats: [logfmt, json]
  # CLI flag: -log.format
  log_format: json

  # Log only messages with the given severity or above. Supported values [debug,
  # info, warn, error]
  # CLI flag: -log.level
  log_level: debug

  #
  # Observability
  #
  register_instrumentation: true


  #
  # GRPC Options
  #
  #grpc_server_max_concurrent_streams: 1000

  http_server_idle_timeout: 120s
  http_server_write_timeout: 6m

  #
  # Misc
  #

  #
  # Cleanly Shutdown
  # 
  graceful_shutdown_timeout: 60s

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#distributor_config
#
distributor:
  ring:
    # The heartbeat timeout after which ingesters are skipped for
    # reading and writing.
    heartbeat_timeout: 1m

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#querier_config
#
querier:
  query_ingesters_within: 2h
  query_timeout: 5m
  # Configuration options for the LogQL engine.
  engine:
    # Timeout for query execution
    timeout: 3m

    # The maximum amount of time to look back for log lines. Only
    # applicable for instant log queries.
    #max_look_back_period: 30s

#
# Docs: https://grafana.com/docs/loki/next/configuration/#query_scheduler
#
query_scheduler:
  use_scheduler_ring: true
  grpc_client_config:
    grpc_compression: 'gzip'

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#query_frontend_config
#
frontend:
  parallelism: 6
  scheduler_address: grpc.query-scheduler.loki.service.kjdev:8085


#
# Docs: https://grafana.com/docs/loki/latest/configuration/#queryrange_config
#
query_range:
  # Split queries by an interval and execute in parallel, 0 disables it. You
  # should use in multiple of 24 hours (same as the storage bucketing scheme),
  # to avoid queriers downloading and processing the same chunks. This also
  # determines how cache keys are chosen when result caching is enabled
  split_queries_by_interval: 30m

  # Mutate incoming queries to align their start and end with their step.
  align_queries_with_step: true

  results_cache:
    #
    # 
    #
    cache:
      memcached_client:
        addresses: dns+memcached.loki.service.kjdev:11211
  
  # Cache query results.
  cache_results: true

  # Maximum number of retries for a single request; beyond this, the downstream
  # error is returned.
  max_retries: 5

  # Perform query parallelisations based on storage sharding configuration and
  # query ASTs. This feature is supported only by the chunks storage engine.
  parallelise_shardable_queries: true





#
# Docs: https://grafana.com/docs/loki/latest/configuration/#ruler_config
#
# TODO: Learn
#
ruler:
  storage:
    type: s3
    s3:
      endpoint: ${S3.Connection.Endpoint}
      bucketnames: ${S3.Bucket}
      access_key_id: '${S3.Credentials.AccessKey}'
      secret_access_key: '${S3.Credentials.SecretKey}'
      s3forcepathstyle: true
      insecure: true
  rule_path: /tmp/scratch
  alertmanager_url: http://http.alertmanager.cortex.service.dc1.kjdev:8080/alertmanager

  enable_api: true
  enable_sharding: true

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#ingester_client_config
#
ingester_client:
  # # Configures how connections are pooled
  pool_config:
    # Whether or not to do health checks.
    # CLI flag: -distributor.health-check-ingesters
    health_check_ingesters: true

    # How frequently to clean up clients for servers that have gone away after
    # a health check.
    # CLI flag: -distributor.client-cleanup-period
    client_cleanup_period: 15s

    # How quickly a dead client will be removed after it has been detected
    # to disappear. Set this to a value to allow time for a secondary
    # health check to recover the missing client.
    #remotetimeout: 60s


  # The remote request timeout on the client side.
  remote_timeout: 5s

  #
  # Docs: https://grafana.com/docs/loki/latest/configuration/#grpc_client_config
  #
  # Configures how the gRPC connection to ingesters work as a client
  grpc_client_config:
    grpc_compression: 'gzip'


#
# Docs: https://grafana.com/docs/loki/latest/configuration/#ingester_config
#
ingester:
  wal:
    enabled: true
    dir: /data/wal
    flush_on_shutdown: true

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#storage_config
#
storage_config:
  aws:
    endpoint: ${S3.Connection.Endpoint}
    bucketnames: ${S3.Bucket}
    access_key_id: '${S3.Credentials.AccessKey}'
    secret_access_key: '${S3.Credentials.SecretKey}'
    s3forcepathstyle: true
    insecure: true

  # Configures storing index in an Object Store(GCS/S3/Azure/Swift/Filesystem) in the form of boltdb files.
  boltdb_shipper:
    # Directory where ingesters would write boltdb files which would then be
    # uploaded by shipper to configured storage
    active_index_directory: /alloc/index

    # Shared store for keeping boltdb files. Supported types: gcs, s3, azure,
    # filesystem
    shared_store: s3

    # Cache location for restoring boltDB files for queries
    cache_location: /alloc/boltdb-cache

    index_gateway_client:
      # "Hostname or IP of the Index Gateway gRPC server.
      server_address: grpc.index-gateway.loki.service.kjdev:8085

  #
  # Docs: https://grafana.com/docs/loki/latest/configuration/#cache_config
  #
  # Config for how the cache for index queries should be built.
  #
  index_queries_cache_config:
    memcached:
      batch_size: 256
      parallelism: 10
    memcached_client:
      addresses: dns+memcached.loki.service.kjdev:11211

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#chunk_store_config
#
chunk_store_config:
  chunk_cache_config:
    memcached:
      batch_size: 256
      parallelism: 10
    memcached_client:
      addresses: dns+memcached.loki.service.kjdev:11211

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#schema_config
#
schema_config:
  #
  # Docs: https://grafana.com/docs/loki/latest/configuration/#period_config
  #
  configs:
    - from: "2020-07-30"
      index:
        period: 24h
        prefix: loki_boltdb_shipper_index_
      object_store: s3
      schema: v11
      store: boltdb-shipper

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#compactor_config
# 
compactor:
  compaction_interval: 10m
  working_directory: /alloc/loki-compactor
  retention_enabled: true
  retention_delete_delay: 2h
  retention_delete_worker_count: 150
  shared_store: s3

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#limits_config
#
limits_config:
  reject_old_samples: true
  reject_old_samples_max_age: 168h
  unordered_writes: true

#
# Docs: https://cortexmetrics.io/docs/configuration/configuration-file/#frontend_worker_config
#
frontend_worker:
  grpc_client_config:
    grpc_compression: 'gzip'
  parallelism: 6
  scheduler_address: grpc.query-scheduler.loki.service.kjdev:8085


#
# Docs: https://grafana.com/docs/loki/latest/configuration/#table_manager_config
#
# TODO: Learn about this
#

#
# Docs: https://grafana.com/docs/loki/latest/configuration/#runtime-configuration-file
#
# TODO: Learn about this
#

#
# Loki Member List
#
memberlist:
  bind_addr:
    - 0.0.0.0
  node_name: {{ env "NOMAD_ALLOC_NAME" }}
  bind_port: 8090
  randomize_node_name: false

  abort_if_cluster_join_fails: false

  

  max_join_backoff: 1m
  max_join_retries: 10
  min_join_backoff: 1s

  advertise_port: 8090
  
  join_members:
    # Distributor
    - dnssrv+gossip.distributor.loki.service.dc1.kjdev

    # Querier
    - dnssrv+gossip.querier.loki.service.dc1.kjdev
    
    # Query Scheduler
    - dnssrv+gossip.query-scheduler.loki.service.dc1.kjdev

    # Query Frontend
    - dnssrv+gossip.query-frontend.loki.service.dc1.kjdev

    # Ruler
    - dnssrv+gossip.ruler.loki.service.dc1.kjdev

    # Ingesters
    - dnssrv+gossip.ingester.loki.service.dc1.kjdev

    # Ingester Querier
    # - dnssrv+gossip.loki-ingester-querier.service.dc1.kjdev

    # Compactor
    - dnssrv+gossip.compactor.loki.service.dc1.kjdev

    # Index Gateway
    - dnssrv+gossip.index-gateway.loki.service.dc1.kjdev

    # Table Manager





#
# Docs: https://grafana.com/docs/loki/latest/configuration/#tracing_config
# ENV VARS: https://www.jaegertracing.io/docs/1.16/client-features/
# 
# TODO: Setup Tempo
#
# tracing:

#
# Common to dedupe config
#
common:
  storage:
    #
    # Minio S3
    #
    s3:
      s3: http://${S3.Connection.Endpoint}
      bucketnames: ${S3.Bucket}
      endpoint: ${S3.Connection.Endpoint}
      access_key_id: '${S3.Credentials.AccessKey}'
      secret_access_key: '${S3.Credentials.SecretKey}'
      s3forcepathstyle: true
      insecure: true

  replication_factor: 1

  # When true, the ingester, compactor, and query_scheduler ring tokens will be saved
  # to files in the path_prefix directory. Loki will error if you set this to true
  # and path_prefix is empty.
  persist_tokens: false

  # A common ring configuration to be used by all Loki rings.
  # If a common ring is given, its values are used to define any undefined ring values.
  # For instance, you can expect the `heartbeat_period` defined in the common section
  # to be used by the distributor's ring, but only if the distributor's ring itself
  # doesn't have a `heartbeat_period` set.  
  ring:
    kvstore:
      store: multi

      prefix: ${Consul.Prefix}/collectors/

      #
      # Docs: https://grafana.com/docs/loki/latest/configuration/#consul_config
      #
      # Configuration for a Consul client. Only applies if store is "consul"
      consul:
        host: ${Consul.Hostname}:${Consul.Port}
        acl_token: ${Consul.Token}

      multi:
        primary: memberlist

        secondary: consul

        mirror_enabled: true
    instance_id: {{ env "NOMAD_ALLOC_NAME" }}
    instance_port: 8085

    instance_addr: {{ env "NOMAD_ALLOC_INDEX" }}.grpc.{{ env "NOMAD_META_TARGET" }}.loki.service.kjdev