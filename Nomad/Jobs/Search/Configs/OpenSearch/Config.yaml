#
# Cluster
#

cluster.name: CoreOpenSearch

#
# Node
#
node.name: 'OpenSearch{{ env "NOMAD_META_NodeType" }}{{ env "NOMAD_ALLOC_INDEX" }}'

node.master: '{{ $Service := env "NOMAD_META_NodeType" }}{{ if eq $Service "Master" }}true{{ else }}false{{ end }}'
node.data: '{{ $Service := env "NOMAD_META_NodeType" }}{{ if eq $Service "Data" }}true{{ else }}false{{ end }}'
node.ingest: '{{ $Service := env "NOMAD_META_NodeType" }}{{ if eq $Service "Ingest" }}true{{ else }}false{{ end }}'

#discovery.seed_hosts: 
#  - 

network.host: 0.0.0.0

plugins:
  security:
    ssl:
      transport:
        pemcert_filepath: TLS/{{ env "NOMAD_META_NodeType" }}/{{ env "NOMAD_META_NodeType" }}{{ env "NOMAD_ALLOC_INDEX" }}.pem
        pemkey_filepath: TLS/{{ env "NOMAD_META_NodeType" }}/{{ env "NOMAD_META_NodeType" }}{{ env "NOMAD_ALLOC_INDEX" }}.key
        pemtrustedcas_filepath: TLS/CA.pem
    allow_unsafe_democertificates: false
    allow_default_init_securityindex: true
    audit.type: internal_opensearch
    enable_snapshot_restore_privilege: true
    check_snapshot_restore_write_privileges: true
    restapi:
      roles_enabled: ["all_access", "security_rest_api_access"]
    system_indices:
      enabled: true
      indices:
        [
          ".opendistro-alerting-config",
          ".opendistro-alerting-alert*",
          ".opendistro-anomaly-results*",
          ".opendistro-anomaly-detector*",
          ".opendistro-anomaly-checkpoints",
          ".opendistro-anomaly-detection-state",
          ".opendistro-reports-*",
          ".opendistro-notifications-*",
          ".opendistro-notebooks",
          ".opendistro-asynchronous-search-response*",
        ]

s3.client.default.protocol: http
s3.client.default.endpoint: ${S3.CoreRepo.Connection.Endpoint}
s3.client.default.access_key: ${S3.CoreRepo.Credentials.AccessKey}
s3.client.default.secret_key: ${S3.CoreRepo.Credentials.SecretKey}