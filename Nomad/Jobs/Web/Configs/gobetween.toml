#
# Logging configuration
#
[logging]
level = "warn"    # "debug" | "info" | "warn" | "error"
output = "stdout" # "stdout" | "stderr" | "/path/to/gobetween.log"
format = "json"   # (optional) "text" | "json"

#
# Pprof profiler configuration
#
[profiler]
enabled = false # false | true
bind = ":6060"  # "host:port"

#
# REST API server configuration
#
[api]
enabled = true  # true | false
bind = ":8888"  # "host:port"
cors = false    # cross-origin resource sharing

#  [api.basic_auth]   # (optional) Enable HTTP Basic Auth
#  login = "admin"    # HTTP Auth Login
#  password = "1111"  # HTTP Auth Password

#  [api.tls]                        # (optional) Enable HTTPS
#  cert_path = "/path/to/cert.pem"  # Path to certificate
#  key_path = "/path/to/key.pem"    # Path to key

#
# Metrics server configuration
#
[metrics]
enabled = false # false | true
bind = ":9284"  # "host:port"

#
# Default values for server configuration, may be overridden in [servers] sections.
# All "duration" fields (for example, postfixed with '_timeout') have the following format:
# <int><duration> where duration can be one of 'ms', 's', 'm', 'h'.
# Examples: "5s", "1m", "500ms", etc. "0" value means no limit
#
[defaults]
max_connections = 0              # Maximum simultaneous connections to the server
client_idle_timeout = "0"        # Client inactivity duration before forced connection drop
backend_idle_timeout = "0"       # Backend inactivity duration before forced connection drop
backend_connection_timeout = "0" # Backend connection timeout (ignored in udp)

[servers]

# ---------- tcp example ----------- #

[servers.syslog]
protocol = "tcp"
bind = "0.0.0.0:514"
balance = "iphash1"

  [servers.syslog.discovery]
  kind = "srv"
  interval = "5s"
  srv_lookup_server = "{{ env "NOMAD_IP_dns" }}:53" # dns server and port
  srv_lookup_pattern = "vector-syslog.service.kjdev." # SRV service pattern 


[servers.dns]
protocol = "udp"
bind = "0.0.0.0:53"
balance = "iphash1"

  [servers.dns.udp]
  max_requests  = 500
  max_responses = 500

  [servers.dns.discovery]
  kind = "srv"
  interval = "5s"
  srv_lookup_server = "{{ env "NOMAD_IP_dns" }}:53" # dns server and port
  srv_lookup_pattern = "coredns-dns-cont.service.kjdev." # SRV service pattern 

[servers.dhcp]
protocol = "udp"
bind = "0.0.0.0:67"
balance = "roundrobin"

  [servers.dhcp.udp]
  max_requests  = 300
  max_responses = 300

  [servers.dhcp.discovery]
  kind = "srv"
  interval = "5s"
  srv_lookup_server = "{{ env "NOMAD_IP_dns" }}:53" # dns server and port
  srv_lookup_pattern = "dhcp.service.kjdev." # SRV service pattern 

[servers.stun]
protocol = "tcp"
bind = "0.0.0.0:3478"
balance = "iphash1"

  [servers.stun.discovery]
  kind = "srv"
  interval = "5s"
  srv_lookup_server = "{{ env "NOMAD_IP_dns" }}:53" # dns server and port
  srv_lookup_pattern = "coturn-stun-cont.service.kjdev." # SRV service pattern 
