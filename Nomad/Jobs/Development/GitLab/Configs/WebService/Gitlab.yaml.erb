production: &base
  gitlab:
    host: gitlab.kristianjones.dev
    https: true # Set to true if using HTTPS, see installation.md#using-https for additional HTTPS configuration details
<% if ENV['GITLAB_SSH_PORT'] && ENV['GITLAB_HOST'] %>
    ssh_host: "<%= ENV['GITLAB_HOST'] %>:<%= ENV['GITLAB_SSH_PORT'] %>"
<% end %>
    trusted_proxies:
      - 172.16.0.0/12
    email_from: ${SMTP.Username}
    email_display_name: GitLab
    email_reply_to: 'me@kristianjones.dev'
    email_subject_suffix: ''
    default_projects_features:
      issues: true
      merge_requests: true
      wiki: true
      snippets: true
      builds: true
      container_registry: true

  consul:
    api_url: 'http://consul.service.dc1.kjdev:8500'
    
  incoming_email:
    enabled: false

  artifacts:
    enabled: true
    object_store:
      enabled: true
      remote_directory: ${S3.ArtifactsBucket.Bucket}
      connection:
        provider: AWS
        aws_access_key_id: '${S3.ArtifactsBucket.Credentials.AccessKey}'
        aws_secret_access_key: '${S3.ArtifactsBucket.Credentials.SecretKey}'
        host: ${S3.ArtifactsBucket.Connection.Hostname}
        endpoint: ${S3.ArtifactsBucket.Connection.Endpoint}
        path_style: true

  external_diffs:
    enabled: true
    object_store:
      enabled: true
      remote_directory: ${S3.ExternalDiffsBucket.Bucket}
      connection:
        provider: AWS
        aws_access_key_id: '${S3.ExternalDiffsBucket.Credentials.AccessKey}'
        aws_secret_access_key: '${S3.ExternalDiffsBucket.Credentials.SecretKey}'
        host: ${S3.ExternalDiffsBucket.Connection.Hostname}
        endpoint: ${S3.ExternalDiffsBucket.Connection.Endpoint}
        path_style: true
      
  lfs:
    enabled: true
    object_store:
      enabled: true
      remote_directory: ${S3.LFSBucket.Bucket}
      connection:
        provider: AWS
        aws_access_key_id: '${S3.LFSBucket.Credentials.AccessKey}'
        aws_secret_access_key: '${S3.LFSBucket.Credentials.SecretKey}'
        host: ${S3.LFSBucket.Connection.Hostname}
        endpoint: ${S3.LFSBucket.Connection.Endpoint}
        path_style: true

  dependency_proxy:
    enabled: true
    object_store:
      enabled: true
      remote_directory: ${S3.DependencyProxyBucket.Bucket}
      connection:
        provider: AWS
        aws_access_key_id: '${S3.DependencyProxyBucket.Credentials.AccessKey}'
        aws_secret_access_key: '${S3.DependencyProxyBucket.Credentials.SecretKey}'
        host: ${S3.DependencyProxyBucket.Connection.Hostname}
        endpoint: ${S3.DependencyProxyBucket.Connection.Endpoint}
        path_style: true


  terraform_state:
    enabled: true
    object_store:
      enabled: true
      remote_directory: ${S3.TerraformStateBucket.Bucket}
      connection:
        provider: AWS
        aws_access_key_id: '${S3.TerraformStateBucket.Credentials.AccessKey}'
        aws_secret_access_key: '${S3.TerraformStateBucket.Credentials.SecretKey}'
        host: ${S3.TerraformStateBucket.Connection.Hostname}
        endpoint: ${S3.TerraformStateBucket.Connection.Endpoint}
        path_style: true

  pages:
    enabled: false
    access_control: false
    artifacts_server: true
    path: /srv/gitlab/shared/pages
    host: pages.127.0.0.1.nip.io
    port: 8090
    https: false
    secret_file: /srv/gitlab/.gitlab_pages_secret
  mattermost:
    enabled: false
  gravatar:
  cron_jobs:
    stuck_ci_jobs_worker:
      cron: "0 * * * *"
    pipeline_schedule_worker:
      cron: "19 * * * *"
    expire_build_artifacts_worker:
      cron: "50 * * * *"
    repository_check_worker:
      cron: "20 * * * *"
    admin_email_worker:
      cron: "0 0 * * 0"
    repository_archive_cache_worker:
      cron: "0 * * * *"
    historical_data_worker:
      cron: "0 12 * * *"
    ldap_sync_worker:
      cron: "30 1 * * *"
    geo_metrics_update_worker:
      cron: "*/1 * * * *"
    geo_prune_event_log_worker:
      cron: "0 */6 * * *"
    geo_repository_sync_worker:
      cron: "*/1 * * * *"
    geo_file_download_dispatch_worker:
      cron: "*/1 * * * *"
  registry:
    enabled: true
    host: "http://localhost:<%= ENV['REGISTRY_PORT'] %>"
    api_url: "http://registry:5000"
    key: /etc/gitlab/registry/gitlab-registry.key
    issuer: gitlab-issuer
  gitlab_ci:
  ldap:
    enabled: false
  kerberos:
    enabled: false
  omniauth:
    enabled: true
    allow_single_sign_on: true
    block_auto_created_users: false
    providers:
      - { name: 'openid_connect',
          label: 'Authentik',
          icon: 'https://d33wubrfki0l68.cloudfront.net/3986a9ebfee622cb3fed7c0b7d3661e431dcff5c/8fd41/img/icon_top_brand.svg',
          args: {
            name: 'openid_connect',
            scope: ['openid','profile','email'],
            response_type: 'code',
            issuer: 'https://auth.kristianjones.dev/application/o/gitlab/',
            discovery: true,
            client_auth_method: 'query',
            uid_field: 'preferred_username',
            send_scope_to_token_endpoint: false,
            client_options: {
              identifier: '${OpenID.ClientID}',
              secret: '${OpenID.ClientSecret}',
              redirect_uri: 'https://gitlab.kristianjones.dev/users/auth/openid_connect/callback'
            }
          }
        }
  shared:
  gitaly:
    client_path: /home/git/gitaly/bin
    token: gitalytokengitalytoken
  repositories:
    storages: # You must have at least a `default` storage path.
      default:
        path: /home/git/repositories
        gitaly_address: tcp://kjdev-gitaly1-custom-app.ix-kjdev-gitaly1.svc.cluster.local:8075
  backup:
    path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
  gitlab_shell:
    path: /home/git/gitlab-shell/
    hooks_path: /home/git/gitlab-shell/hooks/
    secret_file: /var/opt/gitlab/config/secrets/.gitlab_shell_secret
    upload_pack: true
    receive_pack: true
  workhorse:
  gitlab_kas:
    enabled: true
    secret_file: /secrets/KAS/.gitlab_kas_secret
    external_url: ws://http.agent.kas.gitlab.service.dc1.kjdev:8085
    internal_url: grpc://http.api.kas.gitlab.service.dc1.kjdev:8080
    external_k8s_proxy_url: https://kube.gitlab.kristianjones.dev
  git:
    bin_path: /usr/bin/git
  webpack:
  monitoring:
    ip_whitelist:
      - 127.0.0.0/8
    sidekiq_exporter:
  extra:
  rack_attack:
    git_basic_auth: